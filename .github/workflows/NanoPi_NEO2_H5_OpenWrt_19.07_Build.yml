on:
  push:
    paths:
      - 'Version'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          docker image prune -a -f
          sudo apt-get -y install upx-ucl
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm powershell
          sudo apt-get -y autoremove --purge          
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          rm -rf friendlywrt-h5
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
      
      - name: Merge UpStearm OpenWrt
        run: |
          cd friendlywrt-h5/.repo/manifests
          cp ../../../source_xml/h5_19.07.xml h5.xml
          repo sync -c --no-clone-bundle
      
      - name: Merge LEDE
        run: |
          cd friendlywrt-h5
          git clone https://github.com/coolsnowwolf/lede
          cd friendlywrt
          cp -r ../lede/package/lean package/
          sed -i 's/^src-git luci.*/src-git luci https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/^src-git packages.*/src-git packages https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default
      
      - name: Install Luci for Clash
        run: |
          cd friendlywrt-h5/friendlywrt/package
          git clone https://github.com/frainzy1477/luci-app-clash

      - name: Install OpenClash
        run: |
          git clone https://github.com/vernesong/OpenClash.git tmp
          mv tmp/luci-app-openclash friendlywrt-h5/friendlywrt/package
          rm -rf tmp

      - name: Install Clash Binaries
        run: |
          mkdir -p friendlywrt-h5/friendlywrt/package/base-files/files/etc/clash
          cd friendlywrt-h5/friendlywrt/package/base-files/files/etc/clash
          wget https://github.com/Dreamacro/clash/releases/download/v0.18.0/clash-linux-armv8-v0.18.0.gz
          gunzip clash-linux-armv8-v0.18.0.gz
          chmod +x clash-linux-armv8-v0.18.0
          mv clash-linux-armv8-v0.18.0 clash
          mkdir ../openclash
          cp clash ../openclash/

      - name: Set Clash Version
        run: |
          mkdir -p friendlywrt-h5/friendlywrt/package/base-files/files/usr/share/clash
          cd friendlywrt-h5/friendlywrt/package/base-files/files/usr/share/clash
          echo 0.18.0 > core_version

      - name: Install AdGuard Home
        run: |
          cd friendlywrt-h5/friendlywrt/package
          git clone https://github.com/rufengsuixing/luci-app-adguardhome.git

      - name: Update Target.mk
        run: |
          cd friendlywrt-h5/friendlywrt/include 
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci/' target.mk    
          
      - name: Update Feeds
        run: |
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Install Mods
        run: |
          cd friendlywrt-h5
          sed -i '/CONFIG_IB/d;/CONFIG_SDK/d;/CONFIG_BUILDBOT/d;/CONFIG_ALL_KMODS/d;/CONFIG_ALL_NONSHARED/d' configs/config_h5
          sed -i '/iptparser/d;/docker/d;/DOCKER/d;/CONFIG_DISPLAY_SUPPORT/d;/CONFIG_AUDIO_SUPPORT/d' configs/config_h5
          sed -i '/Load Average/i\\t\t<tr><td width="33%"><%:CPU Temperature%></td><td><%=luci.sys.exec("cut -c1-2 /sys/class/thermal/thermal_zone0/temp")%></td></tr>' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/pcdata(boardinfo.system or "?")/"ARMv8"/' friendlywrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i "/redirect_https/d" friendlywrt/package/network/services/uhttpd/files/uhttpd.config
          sed -i 's/1.19.0/1.20.0/g' friendlywrt/feeds/packages/admin/netdata/Makefile
          sed -i 's/007656f639d3544698af503f35550aeb4d4d5a06b81801bf5acf4ac21db68f6e/c739e0fa8d6d7f433c0c7c8016b763e8f70519d67f0b5e7eca9ee5318f210d90/g' friendlywrt/feeds/packages/admin/netdata/Makefile
          sed -i 's/+libjson-c/+libjson-c +libuv/' friendlywrt/feeds/packages/admin/netdata/Makefile

      - name: Custom Configure Files
        run: |
          rm -f friendlywrt-h5/friendlywrt/.config*
          cp r1s-h5-config friendlywrt-h5/friendlywrt/.config

      - name: Install UPX
        run: |
          ln -s /usr/bin/upx-ucl friendlywrt-h5/friendlywrt/staging_dir/host/bin/upx

      - name: Build OpenWrt
        run: |
          cd friendlywrt-h5
          ./build.sh nanopi_r1s.mk
      
      - name: Zip Files
        run: |
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H5 v19.07
          path: ./artifact/
